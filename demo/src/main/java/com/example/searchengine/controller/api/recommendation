package com.example.searchengine.service;

import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

@Service
public class RecommendationService {

    private final Set<String> stopWords = Set.of("的", "是", "在", "和", "也", "對", "於", "了");

    /**
     * 從結果中提取推薦關鍵字
     * @param results 包含標題和內文的結果
     * @param limit   返回推薦關鍵字的數量
     * @return 推薦關鍵字列表
     */
    public List<String> extractRecommendations(Map<String, String> results, int limit) {
        Map<String, Integer> keywordFrequency = new HashMap<>();

        for (Map.Entry<String, String> entry : results.entrySet()) {
            String title = entry.getKey();
            String content = entry.getValue();

            // 分析標題，權重更高
            analyzeText(title, keywordFrequency, 2);

            // 分析內文，權重正常
            analyzeText(content, keywordFrequency, 1);
        }

        // 返回頻率最高的前 N 個詞
        return keywordFrequency.entrySet().stream()
                .sorted((a, b) -> b.getValue().compareTo(a.getValue()))
                .map(Map.Entry::getKey)
                .limit(limit)
                .collect(Collectors.toList());
    }

    /**
     * 分析文本並更新關鍵字頻率
     */
    private void analyzeText(String text, Map<String, Integer> keywordFrequency, int weight) {
        if (text == null || text.isEmpty()) return;

        Pattern pattern = Pattern.compile("[\\p{IsHan}]+");
        Matcher matcher = pattern.matcher(text);

        while (matcher.find()) {
            String word = matcher.group();
            if (!stopWords.contains(word) && word.length() > 1) {
                keywordFrequency.put(word, keywordFrequency.getOrDefault(word, 0) + weight);
            }
        }
    }
}
